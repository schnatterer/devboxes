# Time profiling
# See https://stackoverflow.com/a/20855353/1845976
#exec 3>&2 2> >(tee /tmp/sample-time.$$.log |
#                 sed -u 's/^.*$/now/' |
#                 date -f - +%s.%N >/tmp/sample-time.$$.tim)
#set -x
# When uncommenting also uncomment the set+x at the very end

if [[ ! $(tmux list-sessions) ]]; then 
  tmux
fi

# we use xterm as default,
# but we use screen for tmux.
# This is required to support home+end keys
if [ -n "${TMUX}" ]; then
    export TERM="screen-256color"
else
    export TERM="xterm-256color"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
#export PATH="/snap/bin:$HOME/.local/bin:${PATH}"


# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
#ZSH_THEME="robbyrussell"
#ZSH_THEME="agnoster"
#ZSH_THEME="powerlevel9k/powerlevel9k"
#ZSH_THEME="bullet-train"
ZSH_THEME=spaceship
#ZSH_THEME=simple
SIMPLE_PROMPT="%(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}➜ )"
#ZSH_TMUX_AUTOSTART=true

function simplePrompt() {
  export PROMPT="%(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}➜ )"
  export PS1=$PROMPT
}

# Use via " asciinema rec -c 'ASCIINEMA_REC=1 TITLE=schnatterer/moby-names-generator $SHELL'"
function setup_asciinema() {

  if [ "$ASCIINEMA_REC" = "1" ]; then
    # Set title if necessary
    if [ -n "$TITLE" ]; then
      DISABLE_AUTO_TITLE="true"
      echo -n -e "\033]0;$TITLE\007"
    fi

    # Disable plugin
    delete=you-should-use
    plugins=( "${plugins[@]/$delete}" )

    simplePrompt;
    clear;
  fi
}




SPACESHIP_TIME_SHOW=true

#powerlevel custom settings
POWERLEVEL9K_MODE='awesome-fontconfig'
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(os_icon dir vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status time)
POWERLEVEL9K_SHORTEN_DIR_LENGTH=2
POWERLEVEL9K_OS_ICON_BACKGROUND="white"
POWERLEVEL9K_OS_ICON_FOREGROUND="blue"
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_TIME_FORMAT="%D{%H:%M:%S | %d.%m.%y}"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy-mm-dd"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git 
  git-flow

  mvn
  gradle
  java-env

  #wd
  z
  fzf
  editorconfig

  #zsh-completions
  zsh-syntax-highlighting
  zsh-autosuggestions

  vagrant
  extract
  web-search

  #docker 
  #docker-compose
  kubectl

  # javascript
  npm
  yarn
  gulp

  you-should-use
  #forgit
  fast-syntax-highlighting
  
  tmux
  terraform
 )

setup_asciinema

# User configuration
export PATH="/snap/bin:${KREW_ROOT:-$HOME/.krew}/bin:${HOME}/.local/bin:${PATH}:${HOME}/go/bin/:${HOME}/programs/android/bin/:${HOME}/Android/Sdk/platform-tools/:${HOME}/.linuxbrew/bin"

# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi
export EDITOR='vim'

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

#
## GPG
#

# ssh over gpg
# Launch gpg-agent
gpg-connect-agent /bye
# When using SSH support, use the current TTY for passphrase prompts
gpg-connect-agent updatestartuptty /bye > /dev/null
# Point the SSH_AUTH_SOCK to the one handled by gpg-agen

AGENT_SOCK=$(gpgconf --list-dirs | grep agent-socket | sed 's/.*://')

if [ -S $AGENT_SOCK ]; then export SSH_AUTH_SOCK=${AGENT_SOCK}.ssh
else
  echo "$AGENT_SOCK doesn't exist. Is gpg-agent running ?"
fi

# maven
#export MAVEN_OPTS=-Xms256m -Xmx512m

#alias ..='cd ..'
#alias cd..='cd ..'

command -v exa >/dev/null 2>&1 && alias ls=exa
# A trailing space in VALUE causes the next word to be checked for alias substitution when the alias is expanded.
alias watch='watch '
alias bat='batcat'
alias yaml="bat -p --language='yaml'"
alias json="bat -p --language='json'"

alias "c=xclip"
alias "v=xclip -o"

# cant use gcloud docker auth
#alias reg='docker run --rm -v ${HOME}:/root r.j3ss.co/reg'
#alias terraform='drrmitv ${HOME}:${HOME} --network=host -u "$(id -u):$(id -g)" -w $(pwd) hashicorp/terraform:0.12.24'
alias docker-image-sizes='docker run --rm -e DIS_IMPL schnatterer/docker-image-size'
alias docker-image-size='docker run --rm --entrypoint docker-image-size-curl.sh schnatterer/docker-image-size'
#alias velero='docker run --rm -u $(id -u):$(id -g) -v ${HOME}:/home -eHOME=/home velero/velero'

function kgpoyaml() {
  kubectl get pod "$@" -oyaml|yaml
}

function kgdepyaml() {
  kubectl get deployment "$@" -oyaml|yaml
}

# Allow syntax completion. Doesnt work that way for sub commands :(
# Idea: https://dev.to/raphink/colored-wrappers-for-kubectl-2pj1
# compdef kgpoyaml='kubectl get po'
function koyaml() {
  kubectl "$@" -oyaml|bat -p --language='yaml'
}
compdef koyaml='kubectl'

idea() {
  /snap/intellij-idea-ultimate/current/bin/idea.sh "$*"&!
}

explorer() {
    nautilus --browser "$*"
}

#source ~/.fonts/*.sh
#command -v gopass >/dev/null 2>&1 &&  source <(gopass completion zsh)
command -v helm >/dev/null 2>&1 && source <(helm completion zsh) 
command -v kubectl >/dev/null 2>&1 && source <(kubectl completion zsh)
command -v k3d >/dev/null 2>&1 && source <(k3d completion zsh)
command -v kubecolor >/dev/null 2>&1 && alias kubectl="kubecolor"
# make completion work with kubecolor
compdef kubecolor=kubectl

if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH

  autoload -Uz compinit
  compinit
fi



#[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh # now use oh-my-zsh plugin
#[[ -f ~/.kubectl_fzf.plugin.zsh ]] && source ~/.kubectl_fzf.plugin.zsh
[[ -f ~/.kubectl_aliases ]] && source ~/.kubectl_aliases
alias kx=kubectx
alias kn=kubens
[[ -f ~/.docker_aliases ]] && source ~/.docker_aliases
[[ -f '/usr/share/google-cloud-sdk/completion.zsh.inc' ]] && source '/usr/share/google-cloud-sdk/completion.zsh.inc'

# This speeds up pasting w/ autosuggest
# https://github.com/zsh-users/zsh-autosuggestions/issues/238
pasteinit() {
  OLD_SELF_INSERT=${${(s.:.)widgets[self-insert]}[2,3]}
  zle -N self-insert url-quote-magic # I wonder if you'd need `.url-quote-magic`?
}

pastefinish() {
  zle -N self-insert $OLD_SELF_INSERT
}
zstyle :bracketed-paste-magic paste-init pasteinit
zstyle :bracketed-paste-magic paste-finish pastefinish


[[ -s $HOME/Documents/git/stderred/build/libstderred.so ]] && export LD_PRELOAD="$HOME/Documents/git/stderred/build/libstderred.so${LD_PRELOAD:+:$LD_PRELOAD}"

# Too many builds failed with build kit, as of 07/2020
#export DOCKER_BUILDKIT=1 

# Histsize: If set too far up in this file this seems to be overwritten!
# Default SAVEHIST seems to be 10,000 in Ubuntu
# Keep in mind that the whole thing is kept in memory!
export HISTSIZE=10000000
export SAVEHIST=${HISTSIZE}
# Avoid storing duplicate entries in history to save some space
setopt hist_ignore_all_dups

export ANDROID_HOME=~/Android/Sdk

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR=~/.sdkman
[[ -s ~/.sdkman/bin/sdkman-init.sh ]] && source ~/.sdkman/bin/sdkman-init.sh && source <(sdk completion bash)

# Install Ruby Gems to ~/gems
export GEM_HOME="$HOME/gems"
export PATH="$HOME/gems/bin:$PATH"

#set +x
#exec 2>&3 3>&-i
